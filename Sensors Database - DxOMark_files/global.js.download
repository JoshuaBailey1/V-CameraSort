/*
* jQuery store - Plugin for persistent data storage using localStorage, userData (and window.name)
*
* Authors: Rodney Rehm
* Web: http://medialize.github.com/jQuery-store/
*
* Licensed under
*   MIT License http://www.opensource.org/licenses/mit-license
*   GPL v3 http://opensource.org/licenses/GPL-3.0
*
*/

/**********************************************************************************
 * INITIALIZE EXAMPLES:
 **********************************************************************************
 * 	// automatically detect best suited storage driver and use default serializers
 *	$.storage = new $.store();
 *	// optionally initialize with specific driver and or serializers
 *	$.storage = new $.store( [driver] [, serializers] );
 *		driver		can be the key (e.g. "windowName") or the driver-object itself
 *		serializers	can be a list of named serializers like $.store.serializers
 **********************************************************************************
 * USAGE EXAMPLES:
 **********************************************************************************
 *	$.storage.get( key );			// retrieves a value
 *	$.storage.set( key, value );	// saves a value
 *	$.storage.del( key );			// deletes a value
 *	$.storage.flush();				// deletes aall values
 **********************************************************************************
 */

(function($, undefined) {

    /**********************************************************************************
     * $.store base and convinience accessor
     **********************************************************************************/

    $.store = function(driver, serializers) {
        var that = this;

        if( typeof driver == 'string') {
            if($.store.drivers[driver])
                this.driver = $.store.drivers[driver];
            else
                throw new Error('Unknown driver ' + driver);
        } else if( typeof driver == 'object') {
            var invalidAPI = !$.isFunction(driver.init) || !$.isFunction(driver.get) || !$.isFunction(driver.set) || !$.isFunction(driver.del) || !$.isFunction(driver.flush);

            if(invalidAPI)
                throw new Error('The specified driver does not fulfill the API requirements');

            this.driver = driver;
        } else {
            // detect and initialize storage driver
            $.each($.store.drivers, function() {
                // skip unavailable drivers
                if(!$.isFunction(this.available) || !this.available())
                    return true;
                // continue;

                that.driver = this;
                if(that.driver.init() === false) {
                    that.driver = null;
                    return true;
                    // continue;
                }

                return false;
                // break;
            });
        }

        // use default serializers if not told otherwise
        if(!serializers)
            serializers = $.store.serializers;

        // intialize serializers
        this.serializers = {};
        $.each(serializers, function(key, serializer) {
            // skip invalid processors
            if(!$.isFunction(this.init))
                return true;
            // continue;

            that.serializers[key] = this;
            that.serializers[key].init(that.encoders, that.decoders);
        });
    };
    /**********************************************************************************
     * $.store API
     **********************************************************************************/

    $.extend($.store.prototype, {
        get : function(key) {
            var value = this.driver.get(key);
            return this.driver.encodes ? value : this.unserialize(value);
        },
        set : function(key, value) {
            this.driver.set(key, this.driver.encodes ? value : this.serialize(value));
        },
        del : function(key) {
            this.driver.del(key);
        },
        flush : function() {
            this.driver.flush();
        },
        driver : undefined,
        encoders : [],
        decoders : [],
        serialize : function(value) {
            var that = this;

            $.each(this.encoders, function() {
                var serializer = that.serializers[this + ""];
                if(!serializer || !serializer.encode)
                    return true;
                // continue;
                try {
                    value = serializer.encode(value);
                } catch( e ) {
                }
            });
            return value;
        },
        unserialize : function(value) {
            var that = this;
            if(!value)
                return value;

            $.each(this.decoders, function() {
                var serializer = that.serializers[this + ""];
                if(!serializer || !serializer.decode)
                    return true;
                // continue;

                value = serializer.decode(value);
            });
            return value;
        }
    });

    /**********************************************************************************
     * $.store drivers
     **********************************************************************************/

    $.store.drivers = {
        // Firefox 3.5, Safari 4.0, Chrome 5, Opera 10.5, IE8
        'localStorage' : {
            // see https://developer.mozilla.org/en/dom/storage#localStorage
            ident : "$.store.drivers.localStorage",
            scope : 'browser',
            available : function() {
                try {
                    // Firefox won't allow localStorage if cookies are disabled
                    if(!!window.localStorage) {
                        // Safari's "Private" mode throws a QUOTA_EXCEEDED_ERR on setItem
                        window.localStorage.setItem("jQuery Store Availability test", true);
                        window.localStorage.removeItem("jQuery Store Availability test");
                        return true;
                    };
                    return false;
                } catch(e) {
                    return false;
                }
            },
            init : $.noop,
            get : function(key) {
                return window.localStorage.getItem(key);
            },
            set : function(key, value) {
                window.localStorage.setItem(key, value);
            },
            del : function(key) {
                window.localStorage.removeItem(key);
            },
            flush : function() {
                window.localStorage.clear();
            }
        },

        // IE6, IE7
        'userData' : {
            // see http://msdn.microsoft.com/en-us/library/ms531424.aspx
            ident : "$.store.drivers.userData",
            element : null,
            nodeName : 'userdatadriver',
            scope : 'browser',
            initialized : false,
            available : function() {
                try {
                    return !!(document.documentElement && document.documentElement.addBehavior );
                } catch(e) {
                    return false;
                }
            },
            init : function() {
                // $.store can only utilize one userData store at a time, thus avoid duplicate initialization
                if(this.initialized)
                    return;

                try {
                    // Create a non-existing element and append it to the root element (html)
                    this.element = document.createElement(this.nodeName);
                    document.documentElement.insertBefore(this.element, document.getElementsByTagName('title')[0]);
                    // Apply userData behavior
                    this.element.addBehavior("#default#userData");
                    this.initialized = true;
                } catch( e ) {
                    return false;
                }
            },
            get : function(key) {
                this.element.load(this.nodeName);
                return this.element.getAttribute(key);
            },
            set : function(key, value) {
                this.element.setAttribute(key, value);
                this.element.save(this.nodeName);
            },
            del : function(key) {
                this.element.removeAttribute(key);
                this.element.save(this.nodeName);

            },
            flush : function() {
                // flush by expiration
                var attrs = this.element.xmlDocument.firstChild.attributes;
                for(var i = attrs.length - 1; i >= 0; i--) {
                    this.element.removeAttribute(attrs[i].nodeName);
                }
                this.element.save(this.nodeName);
            }
        },

        // most other browsers
        'windowName' : {
            ident : "$.store.drivers.windowName",
            scope : 'window',
            cache : {},
            encodes : true,
            available : function() {
                return true;
            },
            init : function() {
                this.load();
            },
            save : function() {
                window.name = $.store.serializers.json.encode(this.cache);
            },
            load : function() {
                try {
                    this.cache = $.store.serializers.json.decode(window.name + "");
                    if( typeof this.cache != "object")
                        this.cache = {};
                } catch(e) {
                    this.cache = {};
                    window.name = "{}";
                }
            },
            get : function(key) {
                return this.cache[key];
            },
            set : function(key, value) {
                this.cache[key] = value;
                this.save();
            },
            del : function(key) {
                try {
                    delete this.cache[key];
                } catch(e) {
                    this.cache[key] = undefined;
                }

                this.save();
            },
            flush : function() {
                window.name = "{}";
            }
        }
    };

    /**********************************************************************************
     * $.store serializers
     **********************************************************************************/

    $.store.serializers = {

        'json' : {
            ident : "$.store.serializers.json",
            init : function(encoders, decoders) {
                encoders.push("json");
                decoders.push("json");
            },
            encode : JSON.stringify,
            decode : JSON.parse
        },

        // TODO: html serializer
        // 'html' : {},

        'xml' : {
            ident : "$.store.serializers.xml",
            init : function(encoders, decoders) {
                encoders.unshift("xml");
                decoders.push("xml");
            },
            // wouldn't be necessary if jQuery exposed this function
            isXML : function(value) {
                var documentElement = ( value ? value.ownerDocument || value : 0 ).documentElement;
                return documentElement ? documentElement.nodeName.toLowerCase() !== "html" : false;
            },
            // encodes a XML node to string (taken from $.jStorage, MIT License)
            encode : function(value) {
                if(!value || value._serialized || !this.isXML(value))
                    return value;

                var _value = {
                    _serialized : this.ident,
                    value : value
                };

                try {
                    // Mozilla, Webkit, Opera
                    _value.value = new XMLSerializer().serializeToString(value);
                    return _value;
                } catch(E1) {
                    try {
                        // Internet Explorer
                        _value.value = value.xml;
                        return _value;
                    } catch(E2) {
                    }
                }

                return value;
            },
            // decodes a XML node from string (taken from $.jStorage, MIT License)
            decode : function(value) {
                if(!value || !value._serialized || value._serialized != this.ident)
                    return value;

                var dom_parser = ("DOMParser" in window && (new DOMParser()).parseFromString );
                if(!dom_parser && window.ActiveXObject) {
                    dom_parser = function(_xmlString) {
                        var xml_doc = new ActiveXObject('Microsoft.XMLDOM');
                        xml_doc.async = 'false';
                        xml_doc.loadXML(_xmlString);
                        return xml_doc;
                    }
                }

                if(!dom_parser) {
                    return undefined;
                }

                value.value = dom_parser.call("DOMParser" in window && (new DOMParser()) || window, value.value, 'text/xml');

                return this.isXML(value.value) ? value.value : undefined;
            }
        }
    };

})(jQuery);

// Function.prototype.bind polyfill
if (!Function.prototype.bind) {
    Function.prototype.bind = function (obj) {
        if (typeof this !== 'function') // closest thing possible to the ECMAScript 5 internal IsCallable function
            throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');

        var slice = [].slice,
            args = slice.call(arguments, 1),
            self = this,
            nop = function () {
            },
            bound = function () {
                return self.apply(this instanceof nop ? this : (obj || {}),
                    args.concat(slice.call(arguments)));
            };
        bound.prototype = this.prototype;

        return bound;
    };
}

Object.keys = Object.keys || function (o) {
    var result = [];
    for (var name in o) {
        if (o.hasOwnProperty(name)) {
            result.push(name);
        }
    }
    return result;
};

if (!String.prototype.trim) {
    String.prototype.trim = function () {
        return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
    };
}

if (!Array.prototype.indexOf)
{
    Array.prototype.indexOf = function (elt)
    {
        var len = this.length >>> 0;

        var from = Number(arguments[1]) || 0;
        from = (from < 0)
            ? Math.ceil(from)
            : Math.floor(from);
        if (from < 0)
            from += len;

        for (; from < len; from++)
        {
            if (from in this && this[from] === elt)
                return from;
        }
        return -1;
    };
}

// Production steps of ECMA-262, Edition 5, 15.4.4.18
// Reference: http://es5.github.io/#x15.4.4.18
if (!Array.prototype.forEach) {

    Array.prototype.forEach = function (callback, thisArg) {

        var T, k;

        if (this === null) {
            throw new TypeError(' this is null or not defined');
        }

        // 1. Let O be the result of calling toObject() passing the
        // |this| value as the argument.
        var O = Object(this);

        // 2. Let lenValue be the result of calling the Get() internal
        // method of O with the argument "length".
        // 3. Let len be toUint32(lenValue).
        var len = O.length >>> 0;

        // 4. If isCallable(callback) is false, throw a TypeError exception. 
        // See: http://es5.github.com/#x9.11
        if (typeof callback !== "function") {
            throw new TypeError(callback + ' is not a function');
        }

        // 5. If thisArg was supplied, let T be thisArg; else let
        // T be undefined.
        if (arguments.length > 1) {
            T = thisArg;
        }

        // 6. Let k be 0
        k = 0;

        // 7. Repeat, while k < len
        while (k < len) {

            var kValue;

            // a. Let Pk be ToString(k).
            //    This is implicit for LHS operands of the in operator
            // b. Let kPresent be the result of calling the HasProperty
            //    internal method of O with argument Pk.
            //    This step can be combined with c
            // c. If kPresent is true, then
            if (k in O) {

                // i. Let kValue be the result of calling the Get internal
                // method of O with argument Pk.
                kValue = O[k];

                // ii. Call the Call internal method of callback with T as
                // the this value and argument list containing kValue, k, and O.
                callback.call(T, kValue, k, O);
            }
            // d. Increase k by 1.
            k++;
        }
        // 8. return undefined
    };
}

// Production steps of ECMA-262, Edition 5, 15.4.4.17
// Reference: http://es5.github.io/#x15.4.4.17
if (!Array.prototype.some) {
  Array.prototype.some = function(fun/*, thisArg*/) {
    'use strict';

    if (this == null) {
      throw new TypeError('Array.prototype.some called on null or undefined');
    }

    if (typeof fun !== 'function') {
      throw new TypeError();
    }

    var t = Object(this);
    var len = t.length >>> 0;

    var thisArg = arguments.length >= 2 ? arguments[1] : void 0;
    for (var i = 0; i < len; i++) {
      if (i in t && fun.call(thisArg, t[i], i, t)) {
        return true;
      }
    }

    return false;
  };
}
/* Simple JavaScript Inheritance
* By John Resig http://ejohn.org/
* MIT Licensed.
*/
// Inspired by base2 and Prototype
(function() {
    var initializing = false, fnTest = /xyz/.test( function() {xyz;
    }) ? /\b_super\b/ : /.*/;
    // The base dxoClass implementation (does nothing)
    this.dxoClass = function() {
    };
    // Create a new dxoClass that inherits from this class
    dxoClass.extend = function(prop) {
        var _super = this.prototype;

        // Instantiate a base class (but only create the instance,
        // don't run the init constructor)
        initializing = true;
        var prototype = new this();
        initializing = false;

        // Copy the properties over onto the new prototype
        for(var name in prop) {
            // Check if we're overwriting an existing function
            prototype[name] = typeof prop[name] == "function" &&
            typeof _super[name] == "function" && fnTest.test(prop[name]) ?
            (function(name, fn) {
                return function() {
                    var tmp = this._super;

                    // Add a new ._super() method that is the same method
                    // but on the super-class
                    this._super = _super[name];

                    // The method only need to be bound temporarily, so we
                    // remove it when we're done executing
                    var ret = fn.apply(this, arguments);
                    this._super = tmp;

                    return ret;
                };
            })(name, prop[name]) :
            prop[name];
        }

        // The dummy class constructor
        function dxoClass() {
            // All construction is actually done in the init method
            if(!initializing && this.init) {
                this.init.apply(this, arguments);
            }
        }

        // Populate our constructed prototype object
        dxoClass.prototype = prototype;

        // Enforce the constructor to be what we expect
        dxoClass.prototype.constructor = dxoClass;

        // And make this class extendable
        dxoClass.extend = arguments.callee;

        return dxoClass;
    };
})();
/*
Copyright 2013 Michael Countis

MIT License: http://opensource.org/licenses/MIT
*/

(function(){
	"use strict";

	window.googletag = window.googletag || {};
	window.googletag.cmd = window.googletag.cmd || [];
	
	googletag.cmd.push(function(){
		
		if(googletag.hasOwnProperty("on") || googletag.hasOwnProperty("off") || googletag.hasOwnProperty("trigger") || googletag.hasOwnProperty("events"))
			return;
		
		var 	old_log = googletag.debug_log.log,
			events = [],
			addEvent = function(name,id,match){
				events.push({
					"name":name,
					"id":id,
					"match":match
				});
			};

		addEvent("gpt-google_js_loaded",                    8, /Google service JS loaded/ig);
		addEvent("gpt-gpt_fetch",                           46, /Fetching GPT implementation/ig);
		addEvent("gpt-gpt_fetched",                         48, /GPT implementation fetched\./ig);
		addEvent("gpt-page_load_complete",                  1, /Page load complete/ig);
		addEvent("gpt-queue_start",                         31, /^Invoked queued function/ig);

		addEvent("gpt-service_add_slot",                    40, /Associated ([\w]*) service with slot ([\/\w]*)/ig);
		addEvent("gpt-service_add_targeting",               88, /Setting targeting attribute ([\w]*) with value ([\w\W]*) for service ([\w]*)/ig);
		addEvent("gpt-service_collapse_containers_enable",  78, /Enabling collapsing of containers when there is no ad content/ig);
		addEvent("gpt-service_create",                      35, /Created service: ([\w]*)/ig);
		addEvent("gpt-service_single_request_mode_enable",  63, /Using single request mode to fetch ads/ig);

		addEvent("gpt-slot_create",                         2, /Created slot: ([\/\w]*)/ig);
		addEvent("gpt-slot_add_targeting",                  17, /Setting targeting attribute ([\w]*) with value ([\w\W]*) for slot ([\/\w]*)/ig);
		addEvent("gpt-slot_fill",                           50, /Calling fillslot/ig);
		addEvent("gpt-slot_fetch",                          3, /Fetching ad for slot ([\/\w]*)/ig);
		addEvent("gpt-slot_receiving",                      4, /Receiving ad for slot ([\/\w]*)/ig);
		addEvent("gpt-slot_render_delay",                   53, /Delaying rendering of ad slot ([\/\w]*) pending loading of the GPT implementation/ig);
		addEvent("gpt-slot_rendering",                      5, /^Rendering ad for slot ([\/\w]*)/ig);
		addEvent("gpt-slot_rendered",                       6, /Completed rendering ad for slot ([\/\w]*)/ig);

		googletag.events = googletag.events || {};

		googletag.on = function(events,op_arg0/*data*/,op_arg1/*callback*/){
			if(!op_arg0)
				return this;

			events = events.split(" ");

			var	data = op_arg1 ? op_arg0 : undefined,
				callback = op_arg1 || op_arg0,
				ei = 0,e = '';
			
			callback.data = data;

			for(e = events[ei = 0]; ei < events.length; e = events[++ei])
				(this.events[e] = this.events[e] || []).push(callback);

			return this;
		};


		googletag.off = function(events,handler){
			events = events.split(" ");
			var	ei = 0,e = "",
				fi = 0,f = function(){};
			
			for(e = events[ei]; ei < events.length; e = events[++ei]){
				if(!this.events.hasOwnProperty(e))
					continue;

				if(!handler){
					delete this.events[e];
					continue;
				}

				fi = this.events[e].length - 1;
				for(f = this.events[e][fi]; fi >= 0; f = this.events[e][--fi])
					if(f == handler)
						this.events[e].splice(fi,1);
				if(this.events[e].length === 0)
					delete this.events[e];
			}

			return this;
		};


		googletag.trigger = function(event,parameters){

			if(!this.events[event] || this.events[event].length === 0)
				return this;
			
			var	parameters = parameters || [],
				fi = 0,f = this.events[event][fi];
			
			for(fi,f;fi < this.events[event].length;f = this.events[event][++fi])
				if(f.apply(this,[{data:f.data}].concat(parameters)) === false)
					break;

			return this;
		};


		googletag.debug_log.log = function(level,message,service,slot,reference){
			if (message && message.getMessageId && typeof (message.getMessageId()) == 'number') {
				var	args = Array.prototype.slice.call(arguments),
					e = 0;
				for(e; e < events.length; e++)
					if(events[e].id === message.getMessageId())
						googletag.trigger(events[e].name,args);
			}
			return old_log.apply(this,arguments);
		};


	});
})();
var dxoAbstractClass = dxoClass.extend({
    _isMobileDevice: false,
    _isTouchDevice: false,

    init: function() {
        this.destroyHandler = this.destroy.bind(this);

        this._isMobileDevice = this.isMobileDevice();
        this._isTouchDevice = this.isTouchDevice();

        this.addObservers();
    },

    addObservers: function() {
        $(window)
            .off('unload', this.destroyHandler)
            .on('unload', this.destroyHandler);
    },

    destroy: function () {
        this.removeObservers();

        this.destroyHandler = null;
    },

    removeObservers: function() {
        $(window)
            .off('unload', this.destroyHandler);
    },

    stopEvent: function(evt) {
        if(evt != null) {
            try {
                if(evt.preventDefault != null) {
                    evt.preventDefault();
                }
            } catch(ex) {
            }

            try {
                if(evt.stopPropagation != null) {
                    evt.stopPropagation();
                }
            } catch(ex) {
            }
        }
    },

    isMobileDevice: function() {
        var deviceAgent = navigator.userAgent.toLowerCase();
        return deviceAgent.match(/(iphone|ipod)/i) != null ||
            deviceAgent.match(/(android)/i) != null ||
            deviceAgent.match(/(wpdesktop)/i) != null ||
            deviceAgent.match(/(iemobile)/i) != null ||
            deviceAgent.match(/blackberry/i) != null ||
            deviceAgent.match(/bada/i) != null;
    },

    isTouchDevice: function() {
        var deviceAgent = navigator.userAgent.toLowerCase();
        return this.isMobileDevice() ||
            deviceAgent.match(/ipad/i) != null ||
            'ontouchstart' in window ||
            navigator.msMaxTouchPoints > 0;
    }
});
var dxoUtilsCrypto = {
    createId: function() {
        return Math.floor(Math.random() * 10000000000);
    },

    md5: function(string) {
        var rotateLeft = function(lValue, iShiftBits) {
            return (lValue << iShiftBits) | (lValue >>> (32 - iShiftBits));
        }
        var addUnsigned = function(lX, lY) {
            var lX4, lY4, lX8, lY8, lResult;
            lX8 = (lX & 0x80000000);
            lY8 = (lY & 0x80000000);
            lX4 = (lX & 0x40000000);
            lY4 = (lY & 0x40000000);
            lResult = (lX & 0x3FFFFFFF) + (lY & 0x3FFFFFFF);
            if(lX4 & lY4)
                return (lResult ^ 0x80000000 ^ lX8 ^ lY8);
            if(lX4 | lY4) {
                if(lResult & 0x40000000)
                    return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);
                else
                    return (lResult ^ 0x40000000 ^ lX8 ^ lY8);
            } else {
                return (lResult ^ lX8 ^ lY8);
            }
        }
        var F = function(x, y, z) {
            return (x & y) | ((~x) & z);
        }
        var G = function(x, y, z) {
            return (x & z) | (y & (~z));
        }
        var H = function(x, y, z) {
            return (x ^ y ^ z);
        }
        var I = function(x, y, z) {
            return (y ^ (x | (~z)));
        }
        var FF = function(a, b, c, d, x, s, ac) {
            a = addUnsigned(a, addUnsigned(addUnsigned(F(b, c, d), x), ac));
            return addUnsigned(rotateLeft(a, s), b);
        };

        var GG = function(a, b, c, d, x, s, ac) {
            a = addUnsigned(a, addUnsigned(addUnsigned(G(b, c, d), x), ac));
            return addUnsigned(rotateLeft(a, s), b);
        };

        var HH = function(a, b, c, d, x, s, ac) {
            a = addUnsigned(a, addUnsigned(addUnsigned(H(b, c, d), x), ac));
            return addUnsigned(rotateLeft(a, s), b);
        };

        var II = function(a, b, c, d, x, s, ac) {
            a = addUnsigned(a, addUnsigned(addUnsigned(I(b, c, d), x), ac));
            return addUnsigned(rotateLeft(a, s), b);
        };
        var convertToWordArray = function(string) {
            var lWordCount;
            var lMessageLength = string.length;
            var lNumberOfWordsTempOne = lMessageLength + 8;
            var lNumberOfWordsTempTwo = (lNumberOfWordsTempOne - (lNumberOfWordsTempOne % 64)) / 64;
            var lNumberOfWords = (lNumberOfWordsTempTwo + 1) * 16;
            var lWordArray = Array(lNumberOfWords - 1);
            var lBytePosition = 0;
            var lByteCount = 0;
            while(lByteCount < lMessageLength) {
                lWordCount = (lByteCount - (lByteCount % 4)) / 4;
                lBytePosition = (lByteCount % 4) * 8;
                lWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount) << lBytePosition));
                lByteCount++;
            }
            lWordCount = (lByteCount - (lByteCount % 4)) / 4;
            lBytePosition = (lByteCount % 4) * 8;
            lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80 << lBytePosition);
            lWordArray[lNumberOfWords - 2] = lMessageLength << 3;
            lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29;
            return lWordArray;
        };
        var wordToHex = function(lValue) {
            var WordToHexValue = "", WordToHexValueTemp = "", lByte, lCount;
            for( lCount = 0; lCount <= 3; lCount++) {
                lByte = (lValue >>> (lCount * 8)) & 255;
                WordToHexValueTemp = "0" + lByte.toString(16);
                WordToHexValue = WordToHexValue + WordToHexValueTemp.substr(WordToHexValueTemp.length - 2, 2);
            }
            return WordToHexValue;
        };
        var utf8Encode = function(string) {
            string = string.replace(/\x0d\x0a/g, "\x0a");
            var output = "";
            for(var n = 0; n < string.length; n++) {
                var c = string.charCodeAt(n);
                if(c < 128) {
                    output += String.fromCharCode(c);
                } else if((c > 127) && (c < 2048)) {
                    output += String.fromCharCode((c >> 6) | 192);
                    output += String.fromCharCode((c & 63) | 128);
                } else {
                    output += String.fromCharCode((c >> 12) | 224);
                    output += String.fromCharCode(((c >> 6) & 63) | 128);
                    output += String.fromCharCode((c & 63) | 128);
                }
            }
            return output;
        };

        var x = Array();
        var k, AA, BB, CC, DD, a, b, c, d;
        var S11 = 7, S12 = 12, S13 = 17, S14 = 22;
        var S21 = 5, S22 = 9, S23 = 14, S24 = 20;
        var S31 = 4, S32 = 11, S33 = 16, S34 = 23;
        var S41 = 6, S42 = 10, S43 = 15, S44 = 21;
        string = utf8Encode(string);
        x = convertToWordArray(string);
        a = 0x67452301;
        b = 0xEFCDAB89;
        c = 0x98BADCFE;
        d = 0x10325476;
        for( k = 0; k < x.length; k += 16) {
            AA = a;
            BB = b;
            CC = c;
            DD = d;
            a = FF(a, b, c, d, x[k + 0], S11, 0xD76AA478);
            d = FF(d, a, b, c, x[k + 1], S12, 0xE8C7B756);
            c = FF(c, d, a, b, x[k + 2], S13, 0x242070DB);
            b = FF(b, c, d, a, x[k + 3], S14, 0xC1BDCEEE);
            a = FF(a, b, c, d, x[k + 4], S11, 0xF57C0FAF);
            d = FF(d, a, b, c, x[k + 5], S12, 0x4787C62A);
            c = FF(c, d, a, b, x[k + 6], S13, 0xA8304613);
            b = FF(b, c, d, a, x[k + 7], S14, 0xFD469501);
            a = FF(a, b, c, d, x[k + 8], S11, 0x698098D8);
            d = FF(d, a, b, c, x[k + 9], S12, 0x8B44F7AF);
            c = FF(c, d, a, b, x[k + 10], S13, 0xFFFF5BB1);
            b = FF(b, c, d, a, x[k + 11], S14, 0x895CD7BE);
            a = FF(a, b, c, d, x[k + 12], S11, 0x6B901122);
            d = FF(d, a, b, c, x[k + 13], S12, 0xFD987193);
            c = FF(c, d, a, b, x[k + 14], S13, 0xA679438E);
            b = FF(b, c, d, a, x[k + 15], S14, 0x49B40821);
            a = GG(a, b, c, d, x[k + 1], S21, 0xF61E2562);
            d = GG(d, a, b, c, x[k + 6], S22, 0xC040B340);
            c = GG(c, d, a, b, x[k + 11], S23, 0x265E5A51);
            b = GG(b, c, d, a, x[k + 0], S24, 0xE9B6C7AA);
            a = GG(a, b, c, d, x[k + 5], S21, 0xD62F105D);
            d = GG(d, a, b, c, x[k + 10], S22, 0x2441453);
            c = GG(c, d, a, b, x[k + 15], S23, 0xD8A1E681);
            b = GG(b, c, d, a, x[k + 4], S24, 0xE7D3FBC8);
            a = GG(a, b, c, d, x[k + 9], S21, 0x21E1CDE6);
            d = GG(d, a, b, c, x[k + 14], S22, 0xC33707D6);
            c = GG(c, d, a, b, x[k + 3], S23, 0xF4D50D87);
            b = GG(b, c, d, a, x[k + 8], S24, 0x455A14ED);
            a = GG(a, b, c, d, x[k + 13], S21, 0xA9E3E905);
            d = GG(d, a, b, c, x[k + 2], S22, 0xFCEFA3F8);
            c = GG(c, d, a, b, x[k + 7], S23, 0x676F02D9);
            b = GG(b, c, d, a, x[k + 12], S24, 0x8D2A4C8A);
            a = HH(a, b, c, d, x[k + 5], S31, 0xFFFA3942);
            d = HH(d, a, b, c, x[k + 8], S32, 0x8771F681);
            c = HH(c, d, a, b, x[k + 11], S33, 0x6D9D6122);
            b = HH(b, c, d, a, x[k + 14], S34, 0xFDE5380C);
            a = HH(a, b, c, d, x[k + 1], S31, 0xA4BEEA44);
            d = HH(d, a, b, c, x[k + 4], S32, 0x4BDECFA9);
            c = HH(c, d, a, b, x[k + 7], S33, 0xF6BB4B60);
            b = HH(b, c, d, a, x[k + 10], S34, 0xBEBFBC70);
            a = HH(a, b, c, d, x[k + 13], S31, 0x289B7EC6);
            d = HH(d, a, b, c, x[k + 0], S32, 0xEAA127FA);
            c = HH(c, d, a, b, x[k + 3], S33, 0xD4EF3085);
            b = HH(b, c, d, a, x[k + 6], S34, 0x4881D05);
            a = HH(a, b, c, d, x[k + 9], S31, 0xD9D4D039);
            d = HH(d, a, b, c, x[k + 12], S32, 0xE6DB99E5);
            c = HH(c, d, a, b, x[k + 15], S33, 0x1FA27CF8);
            b = HH(b, c, d, a, x[k + 2], S34, 0xC4AC5665);
            a = II(a, b, c, d, x[k + 0], S41, 0xF4292244);
            d = II(d, a, b, c, x[k + 7], S42, 0x432AFF97);
            c = II(c, d, a, b, x[k + 14], S43, 0xAB9423A7);
            b = II(b, c, d, a, x[k + 5], S44, 0xFC93A039);
            a = II(a, b, c, d, x[k + 12], S41, 0x655B59C3);
            d = II(d, a, b, c, x[k + 3], S42, 0x8F0CCC92);
            c = II(c, d, a, b, x[k + 10], S43, 0xFFEFF47D);
            b = II(b, c, d, a, x[k + 1], S44, 0x85845DD1);
            a = II(a, b, c, d, x[k + 8], S41, 0x6FA87E4F);
            d = II(d, a, b, c, x[k + 15], S42, 0xFE2CE6E0);
            c = II(c, d, a, b, x[k + 6], S43, 0xA3014314);
            b = II(b, c, d, a, x[k + 13], S44, 0x4E0811A1);
            a = II(a, b, c, d, x[k + 4], S41, 0xF7537E82);
            d = II(d, a, b, c, x[k + 11], S42, 0xBD3AF235);
            c = II(c, d, a, b, x[k + 2], S43, 0x2AD7D2BB);
            b = II(b, c, d, a, x[k + 9], S44, 0xEB86D391);
            a = addUnsigned(a, AA);
            b = addUnsigned(b, BB);
            c = addUnsigned(c, CC);
            d = addUnsigned(d, DD);
        }
        var tempValue = wordToHex(a) + wordToHex(b) + wordToHex(c) + wordToHex(d);
        return tempValue.toLowerCase();
    }
};

var dxoUtilsPopup = dxoAbstractClass.extend({
    _id: 'popup' + dxoUtilsCrypto.createId(),
    _className: '',
    _parameters: {},
    _borders: {
        'horizontal': 50,
        'vertical': 50
    },
    _backgroundOpacity: 0.5,
    _content: '',
    _buttons: null,
    _width: null,
    _height: null,
    _messagesTimeout: null,
    _messagesTimer: 5000,
    _viewportHeight: 0,
    _viewportWidth: 0,
    _popupBodyHeight: 0,
    _popupBodyWidth: 0,
    _resizeBody: true,

    init: function(parameters) {
        // Définit les handlers d'évènement
        this.resizeHandler = this.resize.bind(this);
        this.scrollHandler = this.scroll.bind(this);
        this.moveBodyHandler = this.moveBody.bind(this);
        this.launchActionHandler = this.launchAction.bind(this);
        this.showPopupMessageHandler = this.showPopupMessage.bind(this);

        if(parameters.content != null) {
            this._content = parameters.content;
        }
        if(parameters.className != null) {
            this._className = parameters.className;
        }
        if(parameters.width != null) {
            this._width = parameters.width;
        }
        if(parameters.height != null) {
            this._height = parameters.height;
        }
        if(parameters.buttons != null) {
            this._buttons = parameters.buttons;
        }
        if(parameters.borders != null) {
            this._borders = parameters.borders;
        }

        this._parameters = parameters;

        // Affiche le popup
        this.show();

        this._super();
    },

    addObservers: function() {
        this._super();

        $(document)
            .off('click', '#' + this._id + ' .popupAction', this.launchActionHandler)
            .on('click', '#' + this._id + ' .popupAction', this.launchActionHandler)
            .off('click', '#' + this._id + ' .resizeableObject', this.moveBodyHandler)
            .on('click', '#' + this._id + ' .resizeableObject', this.moveBodyHandler)
            .off('dxo::movePopupBody', this.moveBodyHandler)
            .on('dxo::movePopupBody', this.moveBodyHandler)
            .off('dxo::showPopupMessage', this.showPopupMessageHandler)
            .on('dxo::showPopupMessage', this.showPopupMessageHandler);

        $(window)
            .off('resize', this.resizeHandler)
            .on('resize', this.resizeHandler)
            .off('scroll', this.scrollHandler)
            .on('scroll', this.scrollHandler);
    },

    destroy: function() {
        this._super();

        this.resizeHandler = null;
        this.scrollHandler = null;
        this.moveBodyHandler = null;
        this.launchActionHandler = null;
        this.showPopupMessageHandler = null;

        // Détruit le popup
        this.hide();
    },

    removeObservers: function() {
        this._super();

        $(document)
            .off('click', '#' + this._id + ' .popupAction', this.launchActionHandler)
            .off('dxo::movePopupBody', this.moveBodyHandler)
            .off('dxo::showPopupMessage', this.showPopupMessage)
            .off('click', '#' + this._id + ' .resizeableObject', this.moveBodyHandler);

        $(window)
            .off('resize', this.resizeHandler)
            .off('scroll', this.scrollHandler);
    },

    createButtons: function() {
        var popupBodyButtons = '&nbsp;';
        if(this._buttons != null && $.isPlainObject(this._buttons)) {
            popupBodyButtons = '';
            for(buttonText in this._buttons) {
                var buttonClass = [];
                var buttonOnClick = [];

                if($.isArray(this._buttons[buttonText])) {
                    for(var i=0; i<this._buttons[buttonText].length; i++) {
                        if(this._buttons[buttonText][i] == 'close') {
                            buttonClass.push('popupClose');
                        } else {
                            buttonClass.push('popupAction');
                            buttonOnClick.push(this._buttons[buttonText][i]);
                        }
                    }
                } else {
                    if(this._buttons[buttonText] == 'close') {
                        buttonClass.push('popupClose');
                    } else {
                        buttonClass.push('popupAction');
                        buttonOnClick.push(this._buttons[buttonText]);
                    }
                }

                if(buttonClass.length > 0) {
                    buttonClass = 'class="' + buttonClass.join(' ') + '" ';
                }
                if(buttonOnClick.length > 0) {
                    buttonOnClick = 'data-action="' + buttonOnClick.join('; ') + '" ';
                }

                popupBodyButtons += '<input type="button" value="' + buttonText + '" ' +
                    buttonClass + buttonOnClick + ' />';
            }
            return '<div class="popupBodyButtons">' + popupBodyButtons + '</div>';
        }
        return '';
    },

    createLayout: function() {
        if(this._parameters.url != null && this._parameters.url != '') {
            this.createLoader();
            this.createAjaxContent();
        }

        var popupBodyContentStyle = '';
        if(this._width != null) {
            popupBodyContentStyle += 'width: ' + this._width + 'px;';
        }
        if(this._height != null) {
            popupBodyContentStyle += 'height: ' + this._height + 'px;';
        }

        return '<div id="popupBackground" class="popupClose">&nbsp;</div>' +
        '<div id="popupBody" class="hint">' +
            '<div id="popupMessages">&nbsp;</div>' +
            '<div id="popupCross" class="popupClose">&nbsp;</div>' +
            '<div id="popupBodyContent" style="' + popupBodyContentStyle + '">' +
                this._content +
            '</div>' +
            this.createButtons() +
        '</div>';
    },

    createContentIframe: function() {
        var urlParameters = {};
        if(this._parameters.url.indexOf('?') != -1) {
            var urlParser = this._parameters.url.split('?')[1].split('&');
            for(var i=0; i<urlParser.length; i++) {
                var urlParameter = urlParser[i].split('=');
                urlParameters[urlParameter[0]] = urlParameter[1];
            }
        }

        var popupIframe = document.createElement('iframe');
        popupIframe.id = 'popupIframe' + dxoUtilsCrypto.createId();
        popupIframe.style.position = 'absolute';
        popupIframe.style.top = '-10000px';
        popupIframe.style.left = '-10000px';
        popupIframe.src = this._parameters.url;
        $(popupIframe).load(this.readIframeContent.bind(this, popupIframe.id));
        $('body').append(popupIframe);
    },

    readIframeContent: function(popupIframeId) {
        this.removeLoader();

        var popupIframe = $('#' + popupIframeId);
        if(popupIframe.length == 0) {
            return false;
        }

        var popupIframeContent = popupIframe.contents().find('body').html() || '';
        var popupBodyContent = $('#popupBody #popupBodyContent');
        if(popupIframeContent == '' || popupBodyContent.length == 0) {
            return false;
        }

        var popupIframeContentSpan = document.createElement('span');
        popupIframeContentSpan.innerHTML = popupIframeContent;
        popupBodyContent.append(popupIframeContentSpan);
        popupBodyContent.css('width', 'auto').css('height', 'auto');

        this.moveBody(true);

        popupIframe.remove();

        return true;
    },

    createAjaxContent: function() {
        $.ajax({
            'url': this._parameters.url,
            'data' : this._parameters.urlParams,
            'async': false,
            'success':this.loadContent.bind(this),
            'error': this.loadContent.bind(this)
        });
    },

    loadContent: function(content, messages) {
        this.removeLoader();
        this._content = content;

        this.showMessages(messages);
    },

    updateContent: function(content, messages) {
        $('#popupBody #popupBodyContent').html(content);

        this.resizeBackground();
        this.moveBody(true);

        this.showMessages(messages);
    },

    show: function() {
        // Création du corps du popup
        var popup = document.createElement('div');
        popup.id = this._id;
        popup.className = 'popup' + ((this._className == '') ? '' : ' ' + this._className);
        popup.innerHTML = this.createLayout();
        $('body').prepend(popup);

        // Set background opacity
        $('#popupBackground').css('opacity', this._backgroundOpacity);

        // Place le popup correctement dans la page
        this.resizeBackground();
        this.moveBody(true);
    },

    hide: function() {
        // Enlève le popup du DOM
        $('#' + this._id).remove();
    },

    getWebsiteDimensions: function() {
        // La dimension du site Internet est soit la dimension de l'écran,
        // soit la dimension du body du site si l'écran est plus petit que le
        // body
        var popupBody = $('#' + this._id + ' #popupBody');
        var currentTop = popupBody.css('top');
        var currentLeft = popupBody.css('left');

        popupBody.css('top', '-10000px');
        popupBody.css('left', '-10000px');
        var width = Math.max(
            parseInt($('html').width(), 10),
            parseInt($('body').width(), 10),
            parseInt(popupBody.width() + (2 * this._borders.horizontal), 10),
            $(window).width()
        );
        var height = Math.max(
            parseInt($('html').height(), 10),
            parseInt($('body').height(), 10),
            parseInt(popupBody.height() + (2 * this._borders.vertical), 10),
            $(window).height()
        );
        popupBody.css('top', currentTop);
        popupBody.css('left', currentLeft);

        return {
            'width': width,
            'height': height
        };
    },

    resize: function(evt) {
        this.resizeBackground();
        this.moveBody();
    },

    scroll: function() {
        this.moveBody();
    },

    resizeBackground: function() {
        var popup = $('#' + this._id);
        if(popup.length == 0) {
            $(document).trigger('dxo::closePopup');
            return false;
        }

        var currentWidth = parseInt(popup.css('width'), 10);
        var currentHeight = parseInt(popup.css('height'), 10);

        var websiteDimensions = this.getWebsiteDimensions();
        popup
            .css('width', websiteDimensions.width + 'px')
            .css('height', websiteDimensions.height + 'px');

        // Twice for scroll bar purposes
        var websiteDimensions = this.getWebsiteDimensions();
        popup
            .css('width', websiteDimensions.width + 'px')
            .css('height', websiteDimensions.height + 'px');

        if(currentWidth != websiteDimensions.width ||
           currentHeight != websiteDimensions.height) {
            window.setTimeout(this.resize.bind(this), 100);
            return true;
        }
        return false;
    },

    moveBody: function(init) {
        var popupBody = $('#' + this._id + ' #popupBody');
        var popupBodyContent = $('#' + this._id + ' #popupBody #popupBodyContent');
        if(popupBody.length == 0 || popupBodyContent.length == 0) {
            $(document).trigger('dxo::closePopup');
            return false;
        }
        
        // Le viewport est en fait la dimension de l'écran
        var websiteDimensions = this.getWebsiteDimensions();
        if(init == true ||
           websiteDimensions.height != this._viewportHeight || websiteDimensions.width != this._viewportWidth ||
           popupBody.height() != this._popupBodyHeight || popupBody.width() != this._popupBodyWidth) {
            if(init != true) {
                this._viewportHeight = websiteDimensions.height;
                this._viewportWidth = websiteDimensions.width;
                this._popupBodyHeight = popupBody.height();
                this._popupBodyWidth = popupBody.width();
            }
            
            if(this._resizeBody == true) {
                popupBody.height('auto');
                popupBodyContent.height('auto');
            }
    
            // Si l'écran est moins haut que le corps du popup + bordures, on
            // bloque le popup en haut de l'écran pour toujours pouvoir visualiser
            // son contenu
            var popupBodyTop = this._borders.vertical;
            
            if(this._resizeBody == true) {
                if(websiteDimensions.height < (popupBody.height() + (2 * this._borders.vertical))) {
                    var newHeight = (websiteDimensions.height - (2 * this._borders.vertical));
                    popupBody.height(newHeight);
                    popupBodyContent.height(newHeight - (popupBodyContent.outerHeight(true) - popupBodyContent.height()));
                }
            }
    
            // Si l'écran est moins large que le corps du popup + bordures, on
            // bloque le popup à gauche de l'écran pour toujours pouvoir visualiser
            // son contenu
            if(websiteDimensions.width > (popupBody.width() + (2 * this._borders.horizontal))) {
                var popupBodyLeft = parseInt((websiteDimensions.width - popupBody.width()) / 2, 10) + $(window).scrollLeft();
            } else {
                var popupBodyLeft = this._borders.horizontal;
            }
    
            if(init === true) {
                // Si on est dans le cas de l'initialisation, on place le corps
                // du popup au milieu de la page sans effet
                popupBody
                    .css('left', popupBodyLeft + 'px')
                    .css('top', popupBodyTop + 'px');
            } else {
                // Place le corps du popup au milieu de la page en le faisant
                // slider
                popupBody.clearQueue();
                popupBody.animate({
                    'left': popupBodyLeft + 'px',
                    'top': popupBodyTop + 'px'
                });
            }
        }

        return true;
    },

    createLoader: function(domLoader) {
        if(domLoader == true) {
            var popupBodyContent = $('#popupBody #popupBodyContent');
            if(popupBodyContent.length == 0) {
                return false;
            }

            var popupLoader = document.createElement('div');
            popupLoader.id = 'popupLoader';
            popupLoader.innerHTML = '<img src="/bundles/dxomarkpublicsite/image/loader/small.gif" />';
            popupBodyContent.append(popupLoader);
        } else {
            this._content += '<div id="popupLoader">' +
                '<img src="/bundles/dxomarkpublicsite/image/loader/small.gif" />' +
            '</div>';
        }

        return true;
    },

    removeLoader: function() {
        $('#popupBody #popupBodyContent #popupLoader').remove();
    },

    launchAction: function(evt) {
        this.stopEvent(evt);

        var popupAction = $(evt.currentTarget);
        if(popupAction.length == 0) {
            return false;
        }

        if(this[popupAction.data('action')]) {
            this[popupAction.data('action')]();
        }

        return true;
    },

    showPopupMessage: function(evt, data) {
        this.showMessages(data.messages);
    },

    showMessages: function(messages) {
        if(messages != null && Object.keys(messages).length > 0) {
            var messagesLayout = '';
            if(messages.error != null) {
                messagesLayout += '<ul class="error">';
                for(messageIndex in messages.error) {
                    messagesLayout += '<li>' + messages.error[messageIndex] + '</li>';
                }
                messagesLayout += '</ul>';
            }
            if(messages.success != null) {
                messagesLayout += '<ul class="success">';
                for(messageIndex in messages.success) {
                    messagesLayout += '<li>' + messages.success[messageIndex] + '</li>';
                }
                messagesLayout += '</ul>';
            }
            var popupMessages = $('#' + this._id + ' #popupMessages');
            popupMessages.html(messagesLayout);
            popupMessages.css('height', 'auto');
            var popupMessagesHeight = popupMessages.height();
            popupMessages.css('height', 0);
            popupMessages.clearQueue().animate({'top': -popupMessagesHeight + 'px', 'height': popupMessagesHeight + 'px'});
            this._messagesTimeout = window.setTimeout(this.hideMessages.bind(this), this._messagesTimer);
        } else {
            this.hideMessages();
        }
    },

    hideMessages: function() {
        if(this._messagesTimeout != null) {
            window.clearTimeout(this._messagesTimeout);
            this._messagesTimeout = null;
        }
        $('#' + this._id + ' #popupMessages').clearQueue().animate({'top': '0px', 'height': '0px'});
    }
});
new (dxoAbstractClass.extend({
    _lastWidth: null,
    _loadedIds: [],

    init: function() {
        this.resizeHandler = this.resize.bind(this);
        this.loadHandler = this.load.bind(this);
        
        window.DXO_AD_BLOCK_ENABLED = false;

        this._super();
        
        this.loadStatic();
        this.resize();
        this.detectAdBlock();
    },
    
    addObservers: function() {
        this._super();

        $(window)
            .off('resize', this.resizeHandler)
            .on('resize', this.resizeHandler);
        $(document)
            .off('dxo::loadAds', this.loadHandler)
            .on('dxo::loadAds', this.loadHandler);
    },
    
    destroy: function() {
        this._super();

        this.resizeHandler = null;
        this.loadHandler = null;
    },
    
    removeObservers: function() {
        this._super();

        $(window)
            .off('resize', this.resizeHandler);
        $(document)
            .off('dxo::loadAds', this.loadHandler);
    },
    
    loadStatic: function() {
        // Load static ads
        if(window.googletag != null) {
            $('.advertisementContainer[id]').each(function(index, ad) {
                ad = $(ad);
                window.googletag.cmd.push(
                    (function(adId) {
                        return function() {
                            window.googletag.display(adId);
                        };
                    })(ad.attr('id'))
                );
            });
        }
    },
    
    loadDynamic: function() {
        // Load dynamic ads
        if(window.googletag != null && window.DXO_ADS != null) {
            for(var i=0; i<window.DXO_ADS.length; i++) {
                var ads = window.DXO_ADS[i].data;
                var firstAdId = ads[Object.keys(ads)[0]];
                var adContainer = $('.' + window.DXO_ADS[i].className + ' .advertisementContainer[data-id="' + firstAdId + '"]');
                var adContainerWidth = adContainer.width();
                for(var adFormat in ads) {
                    var adWidth = adFormat.split('x')[0];
                    if(adWidth <= adContainerWidth) {
                        if(ads[adFormat] != adContainer.attr('id')) {
                            adContainer.attr('id', ads[adFormat]);
                            adContainer.html('');
                            window.googletag.cmd.push(
                                (function(adId) {
                                    window.googletag.display(adId);
                                    if(this._loadedIds.indexOf(adId) != -1) {
                                        window.googletag.pubads().refresh([window.DXO_AD_SLOTS[adId]]);
                                    } else {
                                        this._loadedIds.push(adId);
                                    }
                                }).bind(this, ads[adFormat])
                            );
                        }

                        break;
                    }
                }
            }
        }
    },
    
    load: function() {
        this.loadStatic();
    },
    
    resize: function() {
        var currentWidth = parseInt($('body').css('min-width'), 10);
        if(currentWidth != this._lastWidth) {
            this._lastWidth = currentWidth;
            this.loadDynamic();
        }
    },
    
    detectAdBlock: function() {
        // Check is ads have been blocked
        var ads = $('*[id^="div-gpt-ad-"]');
        if(ads.length != 0 && ads.filter(':visible').length == 0) {
            window.DXO_AD_BLOCK_ENABLED = true;
        }
    }
}));
new (dxoAbstractClass.extend({
    _popup: null,

    init: function() {
        // Définit les handlers d'évènement
        this.openHandler = this.open.bind(this);
        this.openDirectHandler = this.openDirect.bind(this);
        this.closeHandler = this.close.bind(this);
        this.keyUpHandler = this.keyUp.bind(this);

        this._super();
    },

    addObservers: function() {
        this._super();

        $(document)
            .off('click', '.popupLink', this.openHandler)
            .on('click', '.popupLink', this.openHandler)
            .off('click', '.popupClose', this.closeHandler)
            .on('click', '.popupClose', this.closeHandler)
            .off('dxo::openPopup', this.openDirectHandler)
            .on('dxo::openPopup', this.openDirectHandler)
            .off('dxo::closePopup', this.closeHandler)
            .on('dxo::closePopup', this.closeHandler)
            .off('keyup', this.keyUpHandler)
            .on('keyup', this.keyUpHandler);
    },

    destroy: function() {
        this._super();

        // Détruit les handlers d'évènement
        this.openHandler = null;
        this.openDirectHandler = null;
        this.closeHandler = null;
        this.keyUpHandler = null;
    },

    removeObservers: function() {
        this._super();

        $(document)
            .off('click', '.popupLink', this.openHandler)
            .off('click', '.popupClose', this.closeHandler)
            .off('dxo::openPopup', this.openDirectHandler)
            .off('dxo::closePopup', this.closeHandler)
            .off('keyup', this.keyUpHandler);
    },

    open: function(evt) {
        evt.stopPropagation();
        this.stopEvent(evt);

        // Détruit tout popup déjà existant
        this.close();

        var popupLink = $(evt.currentTarget);
        if(popupLink == null || popupLink.data('type') == null) {
            return false;
        }

        // Créé un nouveau popup
        var popupType = popupLink.data('type');
        var popupParameters = popupLink.data('parameters') || {};
        if(popupLink.attr('href') != null) {
            popupParameters.url = popupLink.attr('href');
        }

        var result = this.createPopup(popupType, popupParameters);

        // Return false pour annuler un evt click
        if(popupLink.attr('href') != null) {
            return false;
        }
        return result;
    },

    openDirect: function(evt, options) {
        this.stopEvent(evt);

        // Détruit tout popup déjà existant
        this.close();

        if(options.type == null) {
            return false;
        }

        // Créé un nouveau popup
        var popupType = options.type;
        var popupParameters = options.parameters || {};

        return this.createPopup(popupType, popupParameters);
    },

    createPopup: function(popupType, popupParameters) {
        var popupClass = 'dxoPopup' + popupType.substr(0, 1).toUpperCase() + popupType.substr(1);
        if(eval('typeof ' + popupClass) != 'undefined') {
            this._popup = eval('new ' + popupClass + '(' + JSON.stringify(popupParameters).replace(/'/gi, "\'") + ')');
            return true;
        }
        return false;
    },

    close: function(evt) {
        this.stopEvent(evt);

        // Appel la fonction de destruction du popup
        if(this._popup != null) {
            this._popup.destroy();
            this._popup = null;
        }
    },

    keyUp: function(evt) {
        if(evt.keyCode == 27) {
            // Détruit le popup dans le cas où la touche est 'Echap'
            this.close();
        } else if(evt.keyCode == 13) {
            // Submit the poup
            if(this._popup != null && this._popup.enterKeyAction != null) {
                this._popup.enterKeyAction();
            }
        }
    }
}));
new (dxoAbstractClass.extend({
    _request: null,

    init: function() {
        this.showAutoCompleteHandler = this.showAutoComplete.bind(this);
        this.hideAutoCompleteHandler = this.hideAutoComplete.bind(this);
        this.goToHighlightedItemHandler = this.goToHighlightedItem.bind(this);
        this.submitHandler = this.submit.bind(this);

        this._super();
    },

    addObservers: function() {
        this._super();

        $('.searchModuleInput')
            .off('keydown', this.goToHighlightedItemHandler)
            .on('keydown', this.goToHighlightedItemHandler)
            .off('keyup', this.showAutoCompleteHandler)
            .on('keyup', this.showAutoCompleteHandler);
        $('body')
            .off('click', this.hideAutoCompleteHandler)
            .on('click', this.hideAutoCompleteHandler);
        $('.searchModuleButton')
            .off('click', this.submitHandler)
            .on('click', this.submitHandler);
    },

    destroy: function() {
        this._super();

        this.showAutoCompleteHandler = null;
        this.hideAutoCompleteHandler = null;
        this.goToHighlightedItemHandler = null;
        this.submitHandler = null;
    },

    removeObservers: function() {
        this._super();

        $('.searchModuleInput')
            .off('keydown', this.goToHighlightedItemHandler)
            .off('keyup', this.showAutoCompleteHandler);
        $('body')
            .off('click', this.hideAutoCompleteHandler);
        $('.searchModuleButton')
            .off('click', this.submitHandler);
    },

    showAutoComplete: function(evt) {
        var searchModule = $(evt.currentTarget).parents('.searchModule');
        var searchModuleInput = searchModule.find('.searchModuleInput');
        var searchModuleAutoCompleter = searchModule.find('.searchModuleAutoCompleter');

        if(evt.which == 38 || evt.which == 40) {
            // Up & Down keys case
            var currentHighlightedElement = searchModuleAutoCompleter.find('.searchModuleAutoCompleterItem.highlighted');
            var nextHighlightedElement = null;
            if(evt.which == 40) {
                if(currentHighlightedElement.length != 1) {
                    nextHighlightedElement = searchModuleAutoCompleter.find('.searchModuleAutoCompleterItem').first();
                } else {
                    nextHighlightedElement = currentHighlightedElement.next('.searchModuleAutoCompleterItem');
                }
            } else {
                if(currentHighlightedElement.length != 1) {
                    nextHighlightedElement = searchModuleAutoCompleter.find('.searchModuleAutoCompleterItem').last();
                } else {
                    nextHighlightedElement = currentHighlightedElement.prev('.searchModuleAutoCompleterItem');
                }
            }
            currentHighlightedElement.removeClass('highlighted');
            nextHighlightedElement.addClass('highlighted');
        } else if(evt.which != 37 && evt.which != 39) {
            // All the cases except Up, Down, Left & Right keys
            searchModuleAutoCompleter.find('.searchModuleAutoCompleterItem').remove();

            var keyword = searchModuleInput.val();
            var searchFor = searchModuleAutoCompleter.find('.searchModuleAutoCompleterTitle span').first();
            searchFor.html(keyword);
            if(keyword.length > 0) {
                this.abortRequest();
                this._request = $.ajax('/search/autocomplete?term=' + keyword + '&' + Math.floor(Math.random() * 100000000000))
                    .done(
                        (function(searchModuleAutoCompleter) {
                            return function(data) {
                                var hasContent = false;
                                searchModuleAutoCompleter.find('.searchModuleAutoCompleterItem').remove();
                                var searchModuleAutoCompleterItems = searchModuleAutoCompleter.find('.searchModuleAutoCompleterItems');
                                searchModuleAutoCompleterItems.find('.searchModuleAutoCompleterNoResult').remove();
                                if(data.length > 0) {
                                    for(var i=0; i<data.length; i++) {
                                        if(data[i].description != null && data[i].description != '') {
                                            hasContent = true;
                                            searchModuleAutoCompleterItems.append(data[i].description);
                                        }
                                    }
                                }

                                // Show no result
                                if(hasContent == false) {
                                    searchModuleAutoCompleterItems.append('<p class="searchModuleAutoCompleterNoResult">No result found</p>');
                                }

                                searchModuleAutoCompleter.show();
                            }
                        })(searchModuleAutoCompleter)
                    );
            } else {
                searchModuleAutoCompleter.hide();
            }
        }
    },

    goToHighlightedItem: function(evt) {
        var searchModule = $(evt.currentTarget).parents('.searchModule');
        var searchModuleAutoCompleter = searchModule.find('.searchModuleAutoCompleter');

        var currentHighlightedElement = searchModuleAutoCompleter.find('.searchModuleAutoCompleterItem.highlighted');
        // Enter key case
        if(evt.which == 13 && currentHighlightedElement.length != 0) {
            document.location.href = currentHighlightedElement.attr('href');
            this.stopEvent(evt);
            return false;
        }
    },

    hideAutoComplete: function(evt) {
        if($(evt.target).parents('.searchModule').length == 0) {
            $('.searchModuleAutoCompleter').hide();
        }
    },

    submit: function(evt) {
        var searchModule = $(evt.currentTarget).parents('.searchModule');
        var searchModuleForm = searchModule.find('.searchModuleForm');
        
        searchModuleForm.submit();
    },

    abortRequest: function() {
        if(this._request != null) {
            try {
                this._request.abort();
            } catch(ex) {
            }
            this._request = null;
        }
    }
}));
new (dxoAbstractClass.extend({
    init: function() {
        this.showHideHandler = this.showHide.bind(this);
        this.hideHandler = this.hide.bind(this);

        this._super();
    },
    
    addObservers: function() {
        this._super();

        $('#headerMobileMenuButton')
            .off('click', this.showHideHandler)
            .on('click', this.showHideHandler);
        $('body')
            .off('click', this.hideHandler)
            .on('click', this.hideHandler);
    },
    
    destroy: function() {
        this._super();

        this.showHideHandler = null;
        this.hideHandler = null;
    },
    
    removeObservers: function() {
        this._super();

        $('#headerMobileMenuButton')
            .off('click', this.showHideHandler);
        $('body')
            .off('click', this.hideHandler);
    },
    
    showHide: function() {
        $('#headerMenu').toggleClass('hideMobileMenu');
    },
    
    hide: function(evt) {
        var element = $(evt.target);
        if(element == null ||
           (element.attr('id') != 'headerMobileMenuButton' &&
            element.attr('id') != 'headerMenu' &&
            element.parents('#headerMenu').length == 0)) {
            $('#headerMenu').addClass('hideMobileMenu');
        }
    }
}));
(function($) {
    if($('.sociallike-item').length) {
       $('body').prepend(
           '<div id="fb-root"><\/div>' +
           '<script type="text\/javascript" src="//platform.twitter.com/widgets.js"><\/script>' +
           '<script type="text\/javascript" src="//platform.linkedin.com/in.js"><\/script>' +
           '<script type="text\/javascript" src="//apis.google.com/js/platform.js" async defer><\/script>' +
           '<script type="text\/javascript" src="//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.7" id="facebook-jssdk"><\/script>'
       );
    }
})(jQuery);
